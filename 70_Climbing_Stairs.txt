You are climbing a stair case. It takes n steps to reach to the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

[my solution ]
×´Ì¬×ªÒÆ·½³Ì F(N)=F(N-1)+F(N-2)
µÝ¹é

int climbStairs(int n) {
     int f1=0,f2=0;
    if (n == 0) return 0;
    if (n == 1) return 1;
    if (n == 2) return 2;
    f1 = climbStairs(n-1);
    f2 = climbStairs(n-2);
    return (f1+f2);
}

·ÇµÝ¹é
int climbStairs2(int n) {
     int sum = 0;
     int a=1, b=2;
     int i;
     if (n == 0) return 0;
     if (n == 1) return 1;
     if (n == 2) return 2;
     for (i=0;i<n-2;i++){
          sum = a + b;
          a = b;
          b = sum;
     }
     return sum;
}
